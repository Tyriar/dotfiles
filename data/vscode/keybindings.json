[
{ "key": "ctrl+shift+r",     "command": "editor.action.format", "when": "editorTextFocus" },
{ "key": "alt+shift+up",     "command": "editor.action.insertCursorAbove", "when": "editorTextFocus" },
{ "key": "alt+shift+down",   "command": "editor.action.insertCursorBelow", "when": "editorTextFocus" },
{ "key": "ctrl+m",           "command": "editor.action.jumpToBracket", "when": "editorTextFocus" },
{ "key": "ctrl+shift+down",  "command": "editor.action.moveLinesDownAction", "when": "editorTextFocus" },
{ "key": "ctrl+shift+up",    "command": "editor.action.moveLinesUpAction", "when": "editorTextFocus" },
{ "key": "alt+enter",        "command": "editor.action.quickFix", "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },

{ "key": "ctrl+shift+w",     "command": "workbench.action.closeAllEditors" },
{ "key": "cmd+shift+w",      "command": "workbench.action.closeAllEditors", "when": "isMac" },
{ "key": "ctrl+shift+o",     "command": "workbench.action.files.openFolder", "when": "!isMac" },
{ "key": "ctrl+r",           "command": "workbench.action.gotoSymbol" },
{ "key": "alt+-",            "command": "workbench.action.navigateBack" },
{ "key": "alt+shift+-",      "command": "workbench.action.navigateForward" },
{ "key": "ctrl+,",           "command": "workbench.action.openGlobalSettings" },
{ "key": "ctrl+k ctrl+s",    "command": "workbench.action.openGlobalKeybindingsFile" },
{ "key": "cmd+k cmd+s",      "command": "workbench.action.openGlobalKeybindingsFile", "when": "isMac" },
{ "key": "cmd+shift+,",      "command": "workbench.action.openRawDefaultSettings", "when": "isMac" },
{ "key": "ctrl+alt+o",       "command": "workbench.action.openRecent" },
{ "key": "ctrl+shift+r",     "command": "workbench.action.reloadWindow", "when": "!isMac" },
{ "key": "cmd+shift+r",      "command": "workbench.action.reloadWindow", "when": "isMac" },
{ "key": "ctrl+shift+i",     "command": "workbench.action.toggleDevTools", "when": "!isMac" },
{ "key": "cmd+alt+i",        "command": "workbench.action.toggleDevTools", "when": "isMac" },
{ "key": "ctrl+shift+q",     "command": "workbench.action.toggleMaximizedPanel" },
{ "key": "ctrl+0",           "command": "workbench.files.action.showActiveFileInExplorer" },
{ "key": "ctrl+shift+e",     "command": "workbench.files.action.focusFilesExplorer" },
{ "key": "ctrl+shift+x",     "command": "workbench.action.terminal.kill" },
{ "key": "ctrl+shift+j",     "command": "workbench.action.terminal.focusNext" },
{ "key": "ctrl+shift+k",     "command": "workbench.action.terminal.focusPrevious" },
{ "key": "ctrl+a",           "command": "workbench.action.terminal.selectAll", "when": "terminalFocus && !isMac" },
{ "key": "cmd+q",            "command": "-workbench.action.quit", "when": "isMac" },
{ "key": "cmd+q cmd+q",      "command": "workbench.action.quit", "when": "isMac" }

// Make Windows copy/paste behave the same as Linux
{ "key": "ctrl+shift+c",     "command": "workbench.action.terminal.copySelection", "when": "terminalFocus && terminalTextSelected" },
{ "key": "ctrl+shift+v",     "command": "workbench.action.terminal.paste", "when": "terminalFocus" },
// Make the explorer act more like OS file explorer
{ "key": "ctrl+n",           "command": "explorer.newFile", "when": "explorerViewletVisible && filesExplorerFocus && !isMac" },
{ "key": "cmd+n",            "command": "explorer.newFile", "when": "explorerViewletVisible && filesExplorerFocus && isMac" },
{ "key": "ctrl+shift+n",     "command": "explorer.newFolder", "when": "explorerViewletVisible && filesExplorerFocus && !isMac" },
{ "key": "cmd+shift+n",      "command": "explorer.newFolder", "when": "explorerViewletVisible && filesExplorerFocus && isMac" },
// Terminal command tracking on Windows and Linux
{ "key": "ctrl+up",          "command": "workbench.action.terminal.scrollToPreviousCommand", "when": "terminalFocus" },
{ "key": "ctrl+down",        "command": "workbench.action.terminal.scrollToNextCommand", "when": "terminalFocus" },
{ "key": "ctrl+shift+up",    "command": "workbench.action.terminal.selectToPreviousCommand", "when": "terminalFocus" },
{ "key": "ctrl+shift+down",  "command": "workbench.action.terminal.selectToNextCommand", "when": "terminalFocus" },

// Don't close when ctrl+w with no files open
{ "key": "ctrl+w",           "command": "-workbench.action.closeWindow", "when": "!editorIsOpen && !multipleEditorGroups" },
// This conflicts with a bash keybinding
{ "key": "ctrl+e",           "command": "-workbench.action.quickOpen" },
// Unbind since it's rebound
{ "key": "ctrl+.",           "command": "-editor.action.quickFix", "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },

// Override next/previous change keybindings to NOT show the inline diff editor
{ "key": "alt+f3",           "command": "workbench.action.editor.nextChange", "when": "editorTextFocus" },
{ "key": "shift+alt+f3",     "command": "workbench.action.editor.previousChange", "when": "editorTextFocus" },
{ "key": "alt+f3",           "command": "workbench.action.compareEditor.nextChange", "when": "textCompareEditorVisible" },
{ "key": "shift+alt+f3",     "command": "workbench.action.compareEditor.previousChange", "when": "textCompareEditorVisible" },

// Preferred hint keybinding on macOS
{ "key": "shift+ctrl+space", "command": "editor.action.triggerParameterHints", "when": "editorHasSignatureHelpProvider && editorTextFocus" },
{ "key": "shift+cmd+space",  "command": "-editor.action.triggerParameterHints" },

// Disable cmd+k on mac such that chords will work
{ "key": "cmd+k",            "command": "-workbench.action.terminal.clear", "when": "terminalFocus && isMac" },
]
